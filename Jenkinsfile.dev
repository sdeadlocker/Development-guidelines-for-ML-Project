pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = '<your-docker-registry>'
        DOCKER_IMAGE = 'mlops-project'
        OCP_PROJECT = '<your-ocp-project>'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://<your-repo-url>.git'
            }
        }

        stage('Ingestion') {
            steps {
                script {
                    // Run the data ingestion script
                    sh 'python src/components/data_ingestion.py'
                }
            }
        }

        stage('Preprocessing') {
            steps {
                script {
                    // Run the data preprocessing script
                    sh 'python src/components/data_preprocessing.py'
                }
            }
        }

        stage('Feature Engineering') {
            steps {
                script {
                    // Run the feature engineering script
                    sh 'python src/components/feature_engineering.py'
                }
            }
        }

        stage('Model Training') {
            steps {
                script {
                    // Run the model training script
                    sh 'python src/pipeline/train_model.py'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USERNAME --password-stdin $DOCKER_REGISTRY"
                    sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('Deploy to OCP') {
            steps {
                script {
                    sh "oc login --token=$OCP_TOKEN --server=$OCP_SERVER"
                    sh "oc project ${OCP_PROJECT}"
                    sh "oc set image dc/mlops-deployment ${DOCKER_IMAGE}=${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
